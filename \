import Link from "next/link";
import React, { FC, useState, useRef, useEffect } from "react";
import { useRouter } from "next/router";

import { BsCart3 } from "react-icons/bs";

import { Squeeze as Hamburger, Squeeze } from "hamburger-react";

import { AnimatePresence, motion, Variants } from "framer-motion";
import { useShoppingCart } from "../context/CartContext";

const Navbar: FC = () => {
  const { openCart, cartQuantity } = useShoppingCart();
  const [item, setItem] = useState<number>(0);

  const router = useRouter();

  const [isOpen, setIsOpen] = useState<boolean>(false);

  let namePath = router.pathname;

  useEffect(() => {
    if (isOpen) {
      setIsOpen(false);
    }
  }, [namePath]);

  return (
    <section
      className="
        h-16 lg:h-20
        sticky top-0 
        z-10
        border-b-2 border-zinc-900
        bg-zinc-100
        items-center justify-between
        flex min-w-full
        "
    >
      <div
        className={`
        ${
          isOpen
            ? "border-transparent"
            : "border-r-2 border-zinc-900 delay-[1s] text-zinc-600"
        }
        z-20 
        transition-all ease-linear duration-400
        items-center justify-center
        lg:hidden flex w-20 h-full`}
      >
        <Squeeze toggled={isOpen} toggle={setIsOpen} />
      </div>

      <nav
        style={{ transformOrigin: "top" }}
        className={`
          hidden lg:flex
          will-change-transform
          transition-all ease-[cubic-bezier(.86,-0.01,.75,.88)] duration-1000
          h-full
          z-10 
          items-center justify-center`}
      >
        {navLink.map((item, index) => (
          <Link key={item} href={index === 0 ? item : `/${item}`}>
            <a
              className={`
            ${
              router.pathname === navString[index]
                ? "bg-zinc-400 text-zinc-900 focus:no-underline hover:no-underline"
                : "no-underline"
            }
             px-4 lg:h-full
            lg:text-lg  
            lg:border-r-2 lg:border-zinc-900
            focus:outline-none grid place-content-center
            focus:underline hover:underline
             underline-offset-8 decoration-fuchsia-800
            capitalize transition-all ease-out -tracking-wider`}
            >
              <h4>{index === 0 ? "home" : item}</h4>
            </a>
          </Link>
        ))}
      </nav>
      <AnimatePresence exitBeforeEnter>
        {isOpen ? <MobileNavbar namePath={router.pathname} /> : ""}
      </AnimatePresence>
      <div
        className=" 
          h-full w-20
          flex flex-col items-center justify-center
          border-l-2 border-zinc-600
          bg-zinc-300 relative"
      >
        <BsCart3
          className="
          lg:text-4xl text-3xl grow p-0.5"
        />
        <h5
          className="
          w-full
          text-center
          text-white
          font-bold 
          bg-zinc-400"
        >
          {cartQuantity}
        </h5>
      </div>
    </section>
  );
};

interface Props {
  namePath: string;
}

const MobileNavbar: FC<Props> = ({ namePath }) => {
  let parent: Variants = {
    hidden: { scaleY: 0 },
    animate: {
      scaleY: 1,
      transition: { staggerChildren: 0.5, delayChildren: 0.3, duration: 1 }
    },
    exit: {
      scaleY: 0,
      transition: {
        staggerChildren: 0.2,
        staggerDirection: -1,
        when: "afterChildren"
      }
    }
  };

  let child: Variants = {
    hidden: { opacity: 0 },
    animate: { opacity: 1, transition: {} },
    exit: { opacity: 0 }
  };

  return (
    <motion.nav
      variants={parent}
      initial="hidden"
      animate="animate"
      exit="exit"
      style={{ transformOrigin: "top" }}
      className="
      lg:hidden
      absolute  top-0 left-0 z-10
      px-20 py-52 gap-8
      h-screen min-w-full flex flex-col items-start justify-start bg-black"
    >
      {navLink.map((item, index) => (
        <Link key={item} href={index === 0 ? item : `/${item}`}>
          <motion.a
            variants={child}
            key={index}
            className={`
            cursor-pointer
            ${
              namePath === navString[index]
                ? "bg-zinc-400 text-zinc-900 focus:no-underline hover:no-underline"
                : "no-underline"
            }
             px-4 lg:h-full
            text-4xl 
            w-full
            lg:border-r-2 lg:border-zinc-600
            rounded-lg
            focus:outline-none flex items-start
            focus:underline hover:underline
             underline-offset-8 decoration-fuchsia-800
            capitalize transition-all ease-out -tracking-wider`}
          >
            <h4>{index === 0 ? "home" : item}</h4>
          </motion.a>
        </Link>
      ))}
    </motion.nav>
  );
};

const navLink: string[] = ["/", "store", "about"];

const navString: string[] = ["/", "/store", "/about"];

export default Navbar;
